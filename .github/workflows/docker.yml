###############################################################################
#        _       _             _   _            _____  _
#       | |     | |           | | | |          |  __ \(_)
#       | | ___ | |__  _ __   | |_| |__   ___  | |__) |_ _ __  _ __   ___ _ __
#   _   | |/ _ \| '_ \| '_ \  | __| '_ \ / _ \ |  _  /| | '_ \| '_ \ / _ \ '__|
#  | |__| | (_) | | | | | | | | |_| | | |  __/ | | \ \| | |_) | |_) |  __/ |
#   \____/ \___/|_| |_|_| |_|  \__|_| |_|\___| |_|  \_\_| .__/| .__/ \___|_|
#                                                       | |   | |
#                                                       |_|   |_|
#
# Copyright (c) 2021-2023 Claudio Andr√© <claudioandre.br at gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY; express or implied.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, as expressed in version 2, seen at
# http://www.gnu.org/licenses/gpl-2.0.html
###############################################################################
# Github Action to build John the Ripper's Docker image
# More info at https://github.com/openwall/john-packages

---
name: Docker Image

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Is it a release build (needs a git checkout)?"
        required: true
        default: "false"
      hash:
        description: "The commit hash to be used"
        required: false
        #TODO: edit before release (JUMBO_RELEASE)
        default: "39db7dd63e3fefb343c3dbb72eaa5c7599b6c298"
      VERSION:
        description: "The software version"
        required: true
        default: "1.9.02" #TODO: edit before release (JUMBO_RELEASE) 1.9.02304
      VERSION_NAME:
        description: "The software version name"
        required: true
        default: "1.9.0-jumbo-1+" #TODO: edit before release (JUMBO_RELEASE)
      tag:
        description: "The image tag"
        required: true
        default: "latest" #TODO: edit before release (JUMBO_RELEASE) rolling
      push:
        description: "Push the resulting image to Docker registry?"
        required: true
        default: "true"

env:
  REPO: ghcr.io/${{ github.repository_owner }}/john

permissions:
  contents: read

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    outputs:
      image: ${{ env.REPO }}:${{ github.event.inputs.tag }}
      digest: ${{ steps.build-and-push.outputs.digest }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          egress-policy: audit

      - name: Check out the repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Current date
        id: date
        run: echo "name=$(date -u)" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: "${{ github.workspace }}/deploy/docker"
          platforms: linux/amd64 #,linux/arm64
          push: ${{ github.event.inputs.push }}
          build-args: |
            RELEASE="${{ github.event.inputs.release }}"
            COMMIT="${{ github.event.inputs.hash }}"
            BUILD_DATE="${{ steps.date.outputs.name }}"
            VERSION="${{ github.event.inputs.VERSION }}"
            VERSION_NAME="${{ github.event.inputs.VERSION_NAME }}"
          tags: |
            ${{ env.REPO }}:${{ github.event.inputs.tag }}
            ${{ env.REPO }}:${{ github.event.inputs.tag }}_J${{ github.run_number }}

  provenance:
    if: ${{ github.event.inputs.push }} == 'true'
    needs: [build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.9.0
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
